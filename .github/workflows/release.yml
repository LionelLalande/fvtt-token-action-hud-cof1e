name: Release

on:
  release:
    types: [published]

env:
  node_version: 24
  package_type: module

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          #cache: pnpm

      - uses: pnpm/action-setup@v4

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: .pnpm/cache
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm.json') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: .pnpm/cache
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm.json') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test:ci

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: .pnpm/cache
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm.json') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: pnpm install

      - name: Typecheck
        run: pnpm typecheck

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install node ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - uses: pnpm/action-setup@v4

      - name: Cache modules
        uses: actions/cache@v3
        id: cache-modules
        with:
          path: .pnpm/cache
          key: ${{ runner.OS }}-pnpm-${{ hashFiles('**/pnpm.json') }}
          restore-keys: |
            ${{ runner.OS }}-pnpm-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: pnpm install

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Build
        run: pnpm build

      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'dist/${{ env.package_type }}.json'
        env:
          version: ${{ steps.get_version.outputs.version-without-v }}
          url: https://github.com/${{ github.repository }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/${{ env.package_type }}.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/${{ env.package_type }}.zip
          readme: https://github.com/${{ github.repository }}/README.md
          license: https://github.com/${{ github.repository }}/LICENSE
          bugs: https://github.com/${{ github.repository }}/issues
          changelog: https://github.com/${{ github.repository }}/CHANGELOG

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish:
    needs:
      - lint
      - test
      - typecheck
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download production artifacts for publication
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create zip file
        working-directory: ./dist
        run: zip -r ../${{ env.package_type }}.zip .

      - name: Create release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/${{ env.package_type }}.json, ./${{ env.package_type }}.zip'
          body: ${{ github.event.release.body }}
